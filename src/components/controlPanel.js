// Generated by IcedCoffeeScript 1.4.0b
/**
* @module
*/

var ControlPanel;

ControlPanel = {
  obj: null,
  activeTool: null,
  clueTable: null,
  clueRelation: null,
  relStart: {
    x: null,
    y: null
    /**
     * @param {jQueryObject} obj Control panel element selected by jQuery
     * @param {Function} cb Callback to be invoked after init finished
    */

  },
  init: function(obj, cb) {
    this.obj = obj;
    this.obj.on('click', '.tool', this.toolActivated);
    if (cb) return cb();
  },
  toolActivated: function(ev) {
    var $tool, toolName;
    $tool = $(this);
    if ($tool.hasClass('active')) {
      return ControlPanel.toolFinished();
    } else {
      toolName = $tool.attr('name');
      $tool.addClass('active');
      ControlPanel.activeTool = toolName;
      ev.stopImmediatePropagation();
      return ControlPanel["" + toolName + "Init"]();
    }
  },
  toolFinished: function(ev) {
    ControlPanel["" + ControlPanel.activeTool + "Finish"]();
    $('.active', this.obj).removeClass('active');
    return this.activeTool = null;
  },
  createTableInit: function() {
    if (this.clueTable == null) {
      this.clueTable = Canvas.self.rect(0, 0, 100, 80, 2);
      this.clueTable.attr({
        fill: '#CCC',
        opacity: 0.5
      }).hide();
    }
    Canvas.on('mousemove', function(ev) {
      return ControlPanel.clueTable.show().attr({
        'x': ev.offsetX,
        'y': ev.offsetY
      });
    });
    Canvas.on('click', function(ev) {
      ControlPanel.clueTable.hide();
      App.actualModel.addTable(Canvas.obj, ev.offsetX, ev.offsetY);
      return ControlPanel.toolFinished();
    });
    return $(document).on('click', this.toolFinished);
  },
  createTableFinish: function() {
    Canvas.off('mousemove');
    Canvas.off('click');
    return $(document).off('click', this.toolFinished);
  },
  createRelationInit: function(ev) {
    Canvas.css({
      'cursor': 'crosshair'
    });
    return Canvas.on('click', function(ev) {
      var pos, startPath;
      if ((ControlPanel.relStart.x == null) && (ControlPanel.relStart.y == null)) {
        pos = ControlPanel.relStart = {
          'x': ev.offsetX,
          'y': ev.offsetY
        };
        startPath = "M" + pos.x + " " + pos.y;
        ControlPanel.clueRelation = Canvas.self.path("M" + pos.x + " " + pos.y);
        return Canvas.on('mousemove', function(ev) {
          return ControlPanel.clueRelation.attr('path', "" + startPath + "L" + ev.offsetX + " " + ev.offsetY);
        });
      } else {
        return ControlPanel.toolFinished();
      }
    });
  },
  createRelationFinish: function() {
    Canvas.css({
      'cursor': 'default'
    });
    Canvas.off('mousemove');
    Canvas.off('click');
    return this.relStart = {
      x: null,
      y: null
    };
  }
};

if (typeof window === "undefined" || window === null) {
  module.exports = ControlPanel;
}
