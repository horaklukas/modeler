// Generated by CoffeeScript 1.6.2
var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

goog.provide('dm.dialogs.RelationDialog');

goog.provide('dm.dialogs.RelationDialog.Confirm');

goog.require('goog.ui.Dialog');

goog.require('tmpls.dialogs.createRelation');

goog.require('goog.dom');

goog.require('goog.soy');

goog.require('goog.string');

goog.require('goog.events');

dm.dialogs.RelationDialog = (function(_super) {
  __extends(RelationDialog, _super);

  function RelationDialog(types) {
    var content;

    this.types = types;
    this.onSelect = __bind(this.onSelect, this);
    this.setIdentifying = __bind(this.setIdentifying, this);
    RelationDialog.__super__.constructor.call(this);
    this.isIdentifying = false;
    this.setContent(tmpls.dialogs.createRelation.dialog(false));
    this.setButtonSet(goog.ui.Dialog.ButtonSet.OK_CANCEL);
    this.setDraggable(false);
    content = this.getContentElement();
    this.relTypeForm = goog.dom.getElement('reltype');
    goog.events.listen(this.relTypeForm, goog.events.EventType.CHANGE, this.setIdentifying);
    goog.events.listen(this, goog.ui.Dialog.EventType.SELECT, this.onSelect);
  }

  /**
  	* If change type of relation (identifying or non-identifying) then save
  	* actual value
  */


  RelationDialog.prototype.setIdentifying = function(ev) {
    return this.isIdentifying = Boolean(goog.string.toNumber(ev.target.value));
  };

  RelationDialog.prototype.show = function(relation) {
    this.relatedRelation = relation;
    return this.setVisible(true);
  };

  RelationDialog.prototype.onSelect = function(e) {
    var confirmEvent;

    if (e.key !== 'ok') {
      return true;
    }
    confirmEvent = new dm.dialogs.RelationDialog.Confirm(this, this.relatedRelation, this.isIdentifying);
    return this.dispatchEvent(confirmEvent);
  };

  RelationDialog.prototype.setValues = function(ident) {
    var newRelTypeForm;

    if (ident == null) {
      ident = false;
    }
    newRelTypeForm = goog.soy.renderAsFragment(tmpls.dialogs.createRelation.identform, {
      ident: ident
    });
    return goog.dom.replaceNode(this.relTypeForm, newRelTypeForm);
  };

  return RelationDialog;

})(goog.ui.Dialog);

dm.dialogs.RelationDialog.EventType = {
  CONFIRM: goog.events.getUniqueId('dialog-confirmed')
};

dm.dialogs.RelationDialog.Confirm = (function(_super) {
  __extends(Confirm, _super);

  function Confirm(dialog, id, ident) {
    Confirm.__super__.constructor.call(this, dm.dialogs.RelationDialog.EventType.CONFIRM, dialog);
    /**
      * @type {string}
    */

    this.relationId = id;
    /**
      * @type {boolean}
    */

    this.identifying = ident;
  }

  return Confirm;

})(goog.events.Event);
